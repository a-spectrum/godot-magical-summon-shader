[gd_scene load_steps=17 format=2]

[ext_resource path="res://assets/noisetexture.tres" type="Texture" id=1]

[sub_resource type="CubeMesh" id=1]

[sub_resource type="VisualShaderNodeScalarOp" id=8]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.02 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=9]
output_port_for_preview = 0
default_input_values = [ 0, 1.0, 1, 0.05 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeVectorOp" id=11]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=12]
constant = Color( 0.16706, 0.763672, 0.108167, 1 )

[sub_resource type="VisualShaderNodeInput" id=4]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=14]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=15]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShader" id=2]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled, specular_schlick_ggx;

uniform sampler2D tex_frg_7;



void vertex() {
// Output:0

}

void fragment() {
// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, n_out2p0.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// Input:3
	float n_out3p0 = TIME;

// ScalarFunc:4
	float n_out4p0 = sin(n_out3p0);

// ScalarOp:5
	float n_in5p1 = 2.00000;
	float n_out5p0 = n_out4p0 / n_in5p1;

// ScalarOp:8
	float n_out8p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) - n_out5p0;

// ScalarFunc:9
	float n_out9p0 = round(n_out8p0);

// ScalarOp:11
	float n_in11p1 = 0.02000;
	float n_out11p0 = n_out8p0 - n_in11p1;

// ScalarOp:12
	float n_in12p0 = 1.00000;
	float n_out12p0 = n_in12p0 - n_out11p0;

// ScalarFunc:13
	float n_out13p0 = round(n_out12p0);

// Color:16
	vec3 n_out16p0 = vec3(0.167060, 0.763672, 0.108167);
	float n_out16p1 = 1.000000;

// VectorOp:14
	vec3 n_out14p0 = vec3(n_out13p0) * n_out16p0;

// Output:0
	ALPHA = n_out9p0;
	EMISSION = n_out14p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 119.74, 214.75 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 1000, -40 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -500, 20 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -500, 220 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( -500, 300 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( -500, 380 )
nodes/fragment/7/node = SubResource( 13 )
nodes/fragment/7/position = Vector2( -300, -180 )
nodes/fragment/8/node = SubResource( 14 )
nodes/fragment/8/position = Vector2( -60, -40 )
nodes/fragment/9/node = SubResource( 15 )
nodes/fragment/9/position = Vector2( 120, -40 )
nodes/fragment/11/node = SubResource( 8 )
nodes/fragment/11/position = Vector2( 140, 200 )
nodes/fragment/12/node = SubResource( 9 )
nodes/fragment/12/position = Vector2( 340, 200 )
nodes/fragment/13/node = SubResource( 10 )
nodes/fragment/13/position = Vector2( 520, 200 )
nodes/fragment/14/node = SubResource( 11 )
nodes/fragment/14/position = Vector2( 720, 200 )
nodes/fragment/16/node = SubResource( 12 )
nodes/fragment/16/position = Vector2( 560, 400 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 4, 0, 5, 0, 2, 0, 7, 0, 7, 0, 8, 0, 8, 0, 9, 0, 5, 0, 8, 1, 9, 0, 0, 1, 8, 0, 11, 0, 11, 0, 12, 1, 12, 0, 13, 0, 13, 0, 14, 0, 16, 0, 14, 1, 14, 0, 0, 5 )

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0458472, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )
